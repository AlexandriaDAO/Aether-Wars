type Librarian = record {
  name : text;
  raw_principal : principal;
  hashed_principal : nat64;
};
type Node = record {
  id : text;
  status : NodeStatus;
  owner : text;
  pvt_key : text;
};
type NodeStatus = variant { Active; InActive };
type Result = variant { Ok : Node; Err : text };
type Result_1 = variant { Ok; Err : text };
service : {
  add_my_node : (text, opt nat8) -> (Result);
  add_node : (text, text, opt nat8) -> (Node);
  delete_librarian : () -> (Result_1);
  delete_node : (text) -> (bool);
  get_all_librarians : () -> (vec Librarian) query;
  get_hashes_and_names : () -> (vec record { nat64; text }) query;
  get_librarian : (nat64) -> (opt Librarian) query;
  get_my_nodes : () -> (vec Node) query;
  get_node_by_id : (text) -> (opt Node) query;
  get_nodes : () -> (vec Node) query;
  get_nodes_by_owner : (text) -> (vec Node) query;
  get_nodes_not_owned_by : (text) -> (vec Node) query;
  get_nodes_not_owned_by_me : () -> (vec Node) query;
  get_random_librarian : () -> (opt Librarian) query;
  is_librarian : () -> (bool) query;
  save_librarian : (text) -> (Result_1);
  update_node_status : (text, nat8) -> (Result);
}
